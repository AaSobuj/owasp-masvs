name: Documents Build

on: [push, workflow_dispatch]

jobs:

##
## For langs that require the special fonts ( Russian, Chinese, etc.)
## The `stable-full` version of pandocker is required, you can activate
## it with the `TAG` environment variable, like this
##
## TAG=stable-full ./tools/docker/pandoc_makedocs.sh ....
##

  en:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Generate English PDF
      run: ./tools/docker/pandoc_makedocs.sh Document ${GITHUB_REF##*/}

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: OWASP_MASVS-${GITHUB_REF##*/}-en
        path: OWASP_MASVS-${GITHUB_REF##*/}-en*

  de:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Generate German PDF
      run: ./tools/docker/pandoc_makedocs.sh Document-de ${GITHUB_REF##*/}

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: OWASP_MASVS-${GITHUB_REF##*/}-de
        path: OWASP_MASVS-${GITHUB_REF##*/}-de*

  fa:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Generate Persian PDF
      run: TAG=stable-full ./tools/docker/pandoc_makedocs.sh Document-fa ${GITHUB_REF##*/}
      env:
        LATEX_TEMPLATE: default # there's a bug in the eisvogel template

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: OWASP_MASVS-${GITHUB_REF##*/}-fa
        path: OWASP_MASVS-${GITHUB_REF##*/}-fa*

  es:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Generate Spanish PDF
      run: ./tools/docker/pandoc_makedocs.sh Document-es ${GITHUB_REF##*/}

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: OWASP_MASVS-${GITHUB_REF##*/}-es
        path: OWASP_MASVS-${GITHUB_REF##*/}-es*

  fr:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Generate French PDF
      run: ./tools/docker/pandoc_makedocs.sh Document-fr ${GITHUB_REF##*/}

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: OWASP_MASVS-${GITHUB_REF##*/}-fr 
        path: OWASP_MASVS-${GITHUB_REF##*/}-fr*

  hi:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Generate Hindi PDF
      run: TAG=stable-full ./tools/docker/pandoc_makedocs.sh Document-hi ${GITHUB_REF##*/}

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: OWASP_MASVS-${GITHUB_REF##*/}-hi
        path: OWASP_MASVS-${GITHUB_REF##*/}-hi*

  ja:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Generate Japanese PDF
      run: TAG=stable-full ./tools/docker/pandoc_makedocs.sh Document-ja ${GITHUB_REF##*/}

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: OWASP_MASVS-${GITHUB_REF##*/}-ja
        path: OWASP_MASVS-${GITHUB_REF##*/}-ja*

  ko:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Generate Korean PDF
      run: TAG=stable-full ./tools/docker/pandoc_makedocs.sh Document-ko ${GITHUB_REF##*/}

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: OWASP_MASVS-${GITHUB_REF##*/}-ko
        path: OWASP_MASVS-${GITHUB_REF##*/}-ko*

  pt-br:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Generate Brazilian Portuguese PDF
      run: ./tools/docker/pandoc_makedocs.sh Document-ptbr ${GITHUB_REF##*/}

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: OWASP_MASVS-${GITHUB_REF##*/}-ptbr
        path: OWASP_MASVS-${GITHUB_REF##*/}-ptbr*


  pt-pt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Generate Portugal Portuguese PDF
      run: ./tools/docker/pandoc_makedocs.sh Document-ptpt ${GITHUB_REF##*/}

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: OWASP_MASVS-${GITHUB_REF##*/}-ptpt
        path: OWASP_MASVS-${GITHUB_REF##*/}-ptpt*


  ru:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Generate Russian PDF
      run: TAG=stable-full ./tools/docker/pandoc_makedocs.sh Document-ru ${GITHUB_REF##*/}

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: OWASP_MASVS-${GITHUB_REF##*/}-ru
        path: OWASP_MASVS-${GITHUB_REF##*/}-ru*

  zhcn:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Generate Simplified Chinese PDF
      run: TAG=stable-full ./tools/docker/pandoc_makedocs.sh Document-zhcn ${GITHUB_REF##*/}

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: OWASP_MASVS-${GITHUB_REF##*/}-zhcn
        path: OWASP_MASVS-${GITHUB_REF##*/}-zhcn*

  zhtw:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Generate Traditional Chinese PDF
      run: TAG=stable-full ./tools/docker/pandoc_makedocs.sh Document-zhtw ${GITHUB_REF##*/}

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: OWASP_MASVS-${GITHUB_REF##*/}-zhtw
        path: OWASP_MASVS-${GITHUB_REF##*/}-zhtw*


  export:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Pull the Docker image
      run: docker pull owasp/masvs-docgenerator:0.2
    # only use below when testing new container builds
    # - name: Build the Docker image
    #   run: docker build ./tools/docker --tag masvs-generator:latest

    - name: Generate python scripts (csv)
      run: docker run -v ${PWD}:/documents owasp/masvs-docgenerator:0.2 'cd /documents/tools && python3 export.py --format csv --lang en > OWASP_MASVS-${GITHUB_REF##*/}.csv'
    - name: Generate python scripts (json)
      run: docker run -v ${PWD}:/documents owasp/masvs-docgenerator:0.2 'cd /documents/tools && python3 export.py --format json --lang en > OWASP_MASVS-${GITHUB_REF##*/}.json'
    - name: Generate python scripts (xml)
      run: docker run -v ${PWD}:/documents owasp/masvs-docgenerator:0.2 'cd /documents/tools && python3 export.py --format xml --lang en > OWASP_MASVS-${GITHUB_REF##*/}.xml'
    - name: Upload CSV export
      uses: actions/upload-artifact@v1
      with:
        name: OWASP_MASVS-${GITHUB_REF##*/}.csv
        path: tools/OWASP_MASVS-${GITHUB_REF##*/}.csv
    - name: Upload JSON export
      uses: actions/upload-artifact@v2
      with:
        name: OWASP_MASVS-${GITHUB_REF##*/}.json
        path: tools/OWASP_MASVS-${GITHUB_REF##*/}.json
    - name: Upload XML export
      uses: actions/upload-artifact@v2
      with:
        name: OWASP_MASVS-${GITHUB_REF##*/}.xml
        path: tools/OWASP_MASVS-${GITHUB_REF##*/}.xml

  release:
    runs-on: ubuntu-latest
    needs: [en, de, fa, es, fr, hi, ja, ko, pt-br, pt-pt, ru, zhcn, zhtw, export]
    if: startsWith(github.ref, 'refs/tags/') && (github.actor == 'cpholguera' || github.actor == 'sushi2k')
    steps:
      - uses: actions/download-artifact@v2

      - name: Move all translations (pdf, epub and docx) to root
        run: mv OWASP_MASVS-*-*/* .
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: false
          draft: true
          generate_release_notes: true
          discussion_category_name: Announcements
          files: |
            OWASP_MASVS-*.pdf
            OWASP_MASVS-*.epub
            OWASP_MASVS-*.docx
            OWASP_MASVS-*.csv/OWASP_MASVS-*.csv
            OWASP_MASVS-*.json/OWASP_MASVS-*.json
            OWASP_MASVS-*.xml/OWASP_MASVS-*.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

